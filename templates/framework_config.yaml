frameworks:
  crewai:
    adapter_import: "createCrewAIAdapter from '../src/adapters/crewai.js'"
    import_comment: "// import { YourCrewAIAgent } from './your-agent.js';"
    adapter_definition: |
      const mcpCrewAIAgent = createCrewAIAdapter(
        new YourCrewAIAgent(),
        name,
        description,
        InputSchema
      );

  langgraph:
    adapter_import: "createLangGraphAdapter from '../src/adapters/langgraph.js'"
    import_comment: "// import { YourLangGraphAgent } from './your-agent.js';"
    adapter_definition: |
      const mcpLangGraphAgent = createLangGraphAdapter(
        new YourLangGraphAgent(),
        name,
        description,
        InputSchema
      );

  llamaindex:
    adapter_import: "createLlamaIndexAdapter from '../src/adapters/llamaindex.js'"
    import_comment: "// import { YourLlamaIndexAgent } from './your-agent.js';"
    adapter_definition: |
      const mcpLlamaIndexAgent = createLlamaIndexAdapter(
        new YourLlamaIndexAgent(),
        name,
        description,
        InputSchema
      );

  openai:
    adapter_import: "createOpenAIAdapter from '../src/adapters/openai.js'"
    import_comment: "// import { YourOpenAIAgent } from './your-agent.js';"
    adapter_definition: |
      const mcpOpenAIAgent = createOpenAIAdapter(
        new YourOpenAIAgent(),
        name,
        description,
        InputSchema
      );

  pydantic:
    adapter_import: "createPydanticAdapter from '../src/adapters/pydantic.js'"
    import_comment: "// import { YourPydanticAgent } from './your-agent.js';"
    adapter_definition: |
      const mcpPydanticAgent = createPydanticAdapter(
        new YourPydanticAgent(),
        name,
        description,
        InputSchema
      );

  mcp-agent:
    adapter_import: "createMcpAgentAdapter from '../src/adapters/mcpAgent.js'"
    import_comment: "// import { YourMcpAgent } from './your-agent.js';"
    adapter_definition: |
      const mcpAgentTool = createMcpAgentAdapter(
        new YourMcpAgent(),
        llm,
        app,
        initializeFn,
        name,
        description,
        InputSchema
      );

  express:
    adapter_import: "createExpressAdapter from '../src/adapters/express.js'"
    import_comment: "// import { YourExpressAgent } from './your-agent.js';"
    adapter_definition: |
      const mcpExpressAgent = createExpressAdapter({
        agentInstance: new YourExpressAgent(),
        name: name,
        description: description,
        inputSchema: InputSchema
      });
